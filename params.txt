[
{"name": "add", "params": [{"x1": "array_like"}, {"x2": "array_like"}, {"out": "ndarray, None, or tuple of ndarray and None, optional"}, {"where": "array_like, optional"}]},
{"name": "allclose", "params": [{"a": "array_like"}, {"b": "array_like"}, {"rtol": "float"}, {"atol": "float"}, {"equal_nan": "bool"}]},
{"name": "arange", "params": [{"start": "integer or real, optional"}, {"stop": "integer or real"}, {"step": "integer or real, optional"}, {"dtype": "dtype, optional"}, {"like": "array_like, optional"}]},
{"name": "argmax", "params": [{"a": "array_like"}, {"axis": "int, optional"}, {"out": "array, optional"}, {"keepdims": "bool, optional"}]},
{"name": "argmin", "params": [{"a": "array_like"}, {"axis": "int, optional"}, {"out": "array, optional"}, {"keepdims": "bool, optional"}]},
{"name": "argsort", "params": [{"a": "array_like"}, {"axis": "int or None, optional"}, {"kind": "{\u2018quicksort\u2019, \u2018mergesort\u2019, \u2018heapsort\u2019, \u2018stable\u2019}, optional"}, {"order": "str or list of str, optional"}]},
{"name": "array_equal", "params": [{"a1": "array_like"}, {"a2": "array_like"}, {"equal_nan": "bool"}]},
{"name": "diag", "params": [{"v": "array_like"}, {"k": "int, optional"}]},
{"name": "divide", "params": [{"x1": "array_like"}, {"x2": "array_like"}, {"out": "ndarray, None, or tuple of ndarray and None, optional"}, {"where": "array_like, optional"}]},
{"name": "dtype", "params": [{"align": "bool, optional"}, {"copy": "bool, optional"}, {"metadata": "dict, optional"}]},
{"name": "empty", "params": [{"shape": "int or tuple of int"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019}, optional, default: \u2018C\u2019"}, {"like": "array_like, optional"}]},
{"name": "empty_like", "params": [{"prototype": "array_like"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019, \u2018A\u2019, or \u2018K\u2019}, optional"}, {"subok": "bool, optional."}, {"shape": "int or sequence of ints, optional."}]},
{"name": "eye", "params": [{"N": "int"}, {"M": "int, optional"}, {"k": "int, optional"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019}, optional"}, {"like": "array_like, optional"}]},
{"name": "flip", "params": [{"m": "array_like"}, {"axis": "None or int or tuple of ints, optional"}]},
{"name": "fromfunction", "params": [{"function": "callable"}, {"shape": "(N,) tuple of ints"}, {"dtype": "data-type, optional"}, {"like": "array_like, optional"}]},
{"name": "fromiter", "params": [{"iter": "iterable object"}, {"dtype": "data-type"}, {"count": "int, optional"}, {"like": "array_like, optional"}]},
{"name": "full", "params": [{"shape": "int or sequence of ints"}, {"fill_value": "scalar or array_like"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019}, optional"}, {"like": "array_like, optional"}]},
{"name": "info", "params": [{"object": "object or str, optional"}, {"maxwidth": "int, optional"}, {"output": "file like object, optional"}, {"toplevel": "str, optional"}]},
{"name": "intersect1d", "params": [{"ar1": "array_like"}, {"ar2": "array_like"}, {"assume_unique": "bool"}, {"return_indices": "bool"}]},
{"name": "linalg.det", "params": [{"a": "(\u2026, M, M) array_like"}]},
{"name": "linspace", "params": [{"start": "array_like"}, {"stop": "array_like"}, {"num": "int, optional"}, {"endpoint": "bool, optional"}, {"retstep": "bool, optional"}, {"dtype": "dtype, optional"}, {"axis": "int, optional"}]},
{"name": "matmul", "params": [{"x1": "array_like"}, {"x2": "array_like"}, {"out": "ndarray, optional"}]},
{"name": "mean", "params": [{"a": "array_like"}, {"axis": "None or int or tuple of ints, optional"}, {"dtype": "data-type, optional"}, {"out": "ndarray, optional"}, {"keepdims": "bool, optional"}, {"where": "array_like of bool, optional"}]},
{"name": "meshgrid", "params": [{"x1": "array_like"}, {"x2": "array_like"}, {"\u2026": "array_like"}, {"xn": "array_like"}, {"indexing": "{\u2018xy\u2019, \u2018ij\u2019}, optional"}, {"sparse": "bool, optional"}, {"copy": "bool, optional"}]},
{"name": "multiply", "params": [{"x1": "array_like"}, {"x2": "array_like"}, {"out": "ndarray, None, or tuple of ndarray and None, optional"}, {"where": "array_like, optional"}]},
{"name": "ndenumerate", "params": [{"arr": "ndarray"}]},
{"name": "negative", "params": [{"x": "array_like or scalar"}, {"out": "ndarray, None, or tuple of ndarray and None, optional"}, {"where": "array_like, optional"}]},
{"name": "nonzero", "params": [{"a": "array_like"}]},
{"name": "ones", "params": [{"shape": "int or sequence of ints"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019}, optional, default: C"}, {"like": "array_like, optional"}]},
{"name": "pad", "params": [{"array": "array_like of rank N"}, {"pad_width": "{sequence, array_like, int}"}, {"mode": "str or function, optional"}, {"stat_length": "sequence or int, optional"}, {"constant_values": "sequence or scalar, optional"}, {"end_values": "sequence or scalar, optional"}, {"reflect_type": "{\u2018even\u2019, \u2018odd\u2019}, optional"}]},
{"name": "put", "params": [{"a": "ndarray"}, {"ind": "array_like"}, {"v": "array_like"}, {"mode": "{\u2018raise\u2019, \u2018wrap\u2019, \u2018clip\u2019}, optional"}]},
{"name": "sum", "params": [{"a": "array_like"}, {"axis": "None or int or tuple of ints, optional"}, {"dtype": "dtype, optional"}, {"out": "ndarray, optional"}, {"keepdims": "bool, optional"}, {"initial": "scalar, optional"}, {"where": "array_like of bool, optional"}]},
{"name": "tile", "params": [{"A": "array_like"}, {"reps": "array_like"}]},
{"name": "transpose", "params": [{"a": "array_like"}, {"axes": "tuple or list of ints, optional"}]},
{"name": "unravel_index", "params": [{"indices": "array_like"}, {"shape": "tuple of ints"}, {"order": "{\u2018C\u2019, \u2018F\u2019}, optional"}]},
{"name": "zeros", "params": [{"shape": "int or tuple of ints"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019}, optional, default: \u2018C\u2019"}, {"like": "array_like, optional"}]},
{"name": "zeros_like", "params": [{"a": "array_like"}, {"dtype": "data-type, optional"}, {"order": "{\u2018C\u2019, \u2018F\u2019, \u2018A\u2019, or \u2018K\u2019}, optional"}, {"subok": "bool, optional."}, {"shape": "int or sequence of ints, optional."}]}
]
